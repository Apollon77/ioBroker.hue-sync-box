{
  "version": 3,
  "sources": ["../src/main.ts"],
  "sourcesContent": ["// hue-sync-box API https://developers.meethue.com/develop/hue-entertainment/hue-hdmi-sync-box-api/#Device%20Discovery\n\n// The adapter-core module gives you access to the core ioBroker functions\n// you need to create an adapter\nimport * as utils from '@iobroker/adapter-core';\n\nimport {\n\tbehaviorChannelObj,\n\tbehaviorInputObj,\n\tbehaviorObj,\n\tcapabilitiesObj,\n\tdeviceChannelObj,\n\tdeviceStateObj,\n\texecutionChannelObj,\n\texecutionObj,\n\tgroupsObj,\n\thdmiChannelObj,\n\thdmiInputObj,\n\thdmiObj,\n\thueChannelObj,\n\thueObj,\n\tmusicObj,\n\tnetworkObj,\n\tupdateObj,\n\tvideo_gameObj,\n} from './lib/object_definition';\nimport * as https from 'https';\nimport axios from 'axios';\n// Load your modules here, e.g.:\nimport { replaceFunktion } from './lib/replaceFunktion';\nimport { ApiResult } from './interface/apiResult';\n\nimport 'source-map-support/register';\n\n// Global variables here\n\nclass HueSyncBox extends utils.Adapter {\n\tprivate requestTimer: ioBroker.Timeout | null;\n\tprivate subscribedStates: string[];\n\tprivate readonly hueTarget: { id: string; name: string }[];\n\tprivate readonly hdmiSource: { id: string; name: string }[];\n\tprivate registrationTimer: ioBroker.Timeout | null;\n\tprivate requestCounter: number;\n\tprivate messageHandler: any[];\n\tprivate messageHandlerTimer: ioBroker.Timeout | null;\n\n\tpublic constructor(options: Partial<utils.AdapterOptions> = {}) {\n\t\tsuper({\n\t\t\t...options,\n\t\t\tname: 'hue-sync-box',\n\t\t});\n\t\tthis.on('ready', this.onReady.bind(this));\n\t\tthis.on('stateChange', this.onStateChange.bind(this));\n\t\tthis.on('message', this.onMessage.bind(this));\n\t\tthis.on('unload', this.onUnload.bind(this));\n\t\tthis.requestTimer = null;\n\t\tthis.registrationTimer = null;\n\t\tthis.messageHandlerTimer = null;\n\t\tthis.subscribedStates = [];\n\t\tthis.hueTarget = [];\n\t\tthis.hdmiSource = [];\n\t\tthis.requestCounter = 0;\n\t\tthis.messageHandler = [];\n\t}\n\n\t/**\n\t * Is called when databases are connected and adapter received configuration.\n\t */\n\tprivate async onReady(): Promise<void> {\n\t\t// Initialize your adapter here\n\t\tthis.messageHandler = [];\n\t\t// Reset the connection indicator during startup\n\t\tthis.setState('info.connection', false, true);\n\t\tthis.writeLog(`[Adapter v.${this.version} onReady] create data`, `debug`);\n\t\tawait this.createStates();\n\t\tthis.writeLog(`[Adapter v.${this.version} onReady] request data`, `debug`);\n\t\tawait this.request();\n\t}\n\n\tprivate async request(): Promise<void> {\n\t\tfor (const devicesKey in this.config.devices) {\n\t\t\tif (Object.prototype.hasOwnProperty.call(this.config.devices, devicesKey)) {\n\t\t\t\tconst device = this.config.devices[devicesKey];\n\t\t\t\tconst result = await this.apiCall(`https://${device.ip}/api/v1`, device, 'GET');\n\t\t\t\tif (!result) {\n\t\t\t\t\tthis.writeLog(\n\t\t\t\t\t\t`[Adapter v.${this.version} request] no result found for ${device.ip} request is aborted`,\n\t\t\t\t\t\t'error',\n\t\t\t\t\t);\n\t\t\t\t\tawait this.setStateAsync(\n\t\t\t\t\t\t`box_${await replaceFunktion(this.config.devices[devicesKey].name)}.reachable`,\n\t\t\t\t\t\tfalse,\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (result && result.status === 200) {\n\t\t\t\t\tthis.writeLog(`[Adapter v.${this.version} request] result found for ${device.ip}`, 'debug');\n\t\t\t\t\tthis.setState('info.connection', true, true);\n\t\t\t\t\tawait this.writeState(result, parseInt(devicesKey));\n\t\t\t\t\t// set reachable to true\n\t\t\t\t\tawait this.setStateAsync(\n\t\t\t\t\t\t`box_${await replaceFunktion(this.config.devices[devicesKey].name)}.reachable`,\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tthis.writeLog(\n\t\t\t\t\t\t`[Adapter v.${this.version} request] no result found for ${device.ip} request is aborted`,\n\t\t\t\t\t\t'error',\n\t\t\t\t\t);\n\t\t\t\t\tawait this.setStateAsync(\n\t\t\t\t\t\t`box_${await replaceFunktion(this.config.devices[devicesKey].name)}.reachable`,\n\t\t\t\t\t\tfalse,\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// timer for request of 10 seconds\n\t\tif (this.requestTimer) this.clearTimeout(this.requestTimer);\n\t\tthis.requestTimer = this.setTimeout(async () => {\n\t\t\tawait this.request();\n\t\t}, 15000);\n\t}\n\n\tprivate async writeState(result: { data: ApiResult }, key: number): Promise<void> {\n\t\tconst data = result.data as ApiResult;\n\t\tif (data === undefined) {\n\t\t\tthis.writeLog(`[Adapter v.${this.version} writeState] no data received`, `error`);\n\t\t\treturn;\n\t\t}\n\t\t// write state of device\n\t\tthis.writeLog(\n\t\t\t`[Adapter v.${this.version} writeState] prepare to write the data for ${this.config.devices[key].name}`,\n\t\t\t'debug',\n\t\t);\n\n\t\t// write the result data to the json state\n\t\tawait this.setStateAsync(\n\t\t\t`box_${await replaceFunktion(this.config.devices[key].name)}.json`,\n\t\t\tJSON.stringify(data),\n\t\t\ttrue,\n\t\t);\n\n\t\tfor (const [resultKey, resultValue] of Object.entries(data)) {\n\t\t\tif (typeof resultValue === 'object') {\n\t\t\t\tfor (const [valueKey, value] of Object.entries(resultValue)) {\n\t\t\t\t\tif (typeof value !== 'object') {\n\t\t\t\t\t\tif (resultKey !== 'ir' && resultKey !== 'registrations' && resultKey !== 'presets') {\n\t\t\t\t\t\t\tawait this.setStateAsync(\n\t\t\t\t\t\t\t\t`box_${await replaceFunktion(this.config.devices[key].name)}.${resultKey}.${valueKey}`,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tval: value as any,\n\t\t\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (resultKey !== 'ir' && resultKey !== 'registrations' && resultKey !== 'presets') {\n\t\t\t\t\t\t\tfor (const value1Key in value) {\n\t\t\t\t\t\t\t\tconst valueObjKey = value1Key as keyof typeof value;\n\n\t\t\t\t\t\t\t\tif (Object.prototype.hasOwnProperty.call(value, valueObjKey)) {\n\t\t\t\t\t\t\t\t\tif (resultKey === 'hue') {\n\t\t\t\t\t\t\t\t\t\tfor (const [hueGroupKey, hueGroupValue] of Object.entries(value[valueObjKey])) {\n\t\t\t\t\t\t\t\t\t\t\tawait this.setStateAsync(\n\t\t\t\t\t\t\t\t\t\t\t\t`box_${await replaceFunktion(\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.config.devices[key].name,\n\t\t\t\t\t\t\t\t\t\t\t\t)}.${resultKey}.${valueKey}.${valueObjKey}.${hueGroupKey}`,\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tval: hueGroupValue as any,\n\t\t\t\t\t\t\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t\tresultKey === 'execution' &&\n\t\t\t\t\t\t\t\t\t\t\tvalueObjKey === 'intensity' &&\n\t\t\t\t\t\t\t\t\t\t\tvalueKey === data.execution.lastSyncMode\n\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\tthis.writeLog(\n\t\t\t\t\t\t\t\t\t\t\t\t`[Adapter v.${this.version} writeState] write state for ${resultKey}.${valueObjKey} with value ${value[valueObjKey]} from ${resultKey}.${valueKey}.${valueObjKey}`,\n\t\t\t\t\t\t\t\t\t\t\t\t'debug',\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\tconst mode = data.execution\n\t\t\t\t\t\t\t\t\t\t\t\t.lastSyncMode as ApiResult['execution']['lastSyncMode'];\n\t\t\t\t\t\t\t\t\t\t\tawait this.setStateAsync(\n\t\t\t\t\t\t\t\t\t\t\t\t`box_${await replaceFunktion(\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.config.devices[key].name,\n\t\t\t\t\t\t\t\t\t\t\t\t)}.${resultKey}.${valueObjKey}`,\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tval: data.execution[mode].intensity,\n\t\t\t\t\t\t\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tawait this.setStateAsync(\n\t\t\t\t\t\t\t\t\t\t\t`box_${await replaceFunktion(\n\t\t\t\t\t\t\t\t\t\t\t\tthis.config.devices[key].name,\n\t\t\t\t\t\t\t\t\t\t\t)}.${resultKey}.${valueKey}.${valueObjKey}`,\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tval: value[valueObjKey] as any,\n\t\t\t\t\t\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.writeLog(\n\t\t\t`[Adapter v.${this.version} writeState] all data for ${this.config.devices[key].name} written`,\n\t\t\t'debug',\n\t\t);\n\t}\n\n\tprivate async apiCall(url: string, device: ioBroker.Devices, method: string, data?: any): Promise<any> {\n\t\ttry {\n\t\t\t// create config for axios\n\t\t\tconst config = {\n\t\t\t\tmethod: method,\n\t\t\t\turl: url,\n\t\t\t\theaders: {\n\t\t\t\t\tAuthorization: `Bearer ${this.decrypt(device.token)}`,\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t},\n\t\t\t\thttpsAgent: new https.Agent({ rejectUnauthorized: false }),\n\t\t\t\tdata: data,\n\t\t\t};\n\n\t\t\t// send request\n\t\t\tconst response = await axios(config);\n\t\t\tthis.writeLog(\n\t\t\t\t`[Adapter v.${this.version} axios v.${axios.VERSION} apiCall] response: ${JSON.stringify(\n\t\t\t\t\tresponse.data,\n\t\t\t\t)}`,\n\t\t\t\t'debug',\n\t\t\t);\n\t\t\treturn response;\n\t\t} catch (error) {\n\t\t\tif (error.response) {\n\t\t\t\tif (error.response.status === 400) {\n\t\t\t\t\tthis.writeLog(\n\t\t\t\t\t\t`[Adapter v.${this.version} axios v.${axios.VERSION} apiCall] error: ${error.response.status} ${error.message} - Body malformed.`,\n\t\t\t\t\t\t'error',\n\t\t\t\t\t);\n\t\t\t\t} else if (error.response.status === 401) {\n\t\t\t\t\tthis.writeLog(\n\t\t\t\t\t\t`[Adapter v.${this.version} axios v.${axios.VERSION} apiCall] error: ${error.response.status} ${error.message} - Authentication failed`,\n\t\t\t\t\t\t'error',\n\t\t\t\t\t);\n\t\t\t\t\tif (error.response.data.code === 2) {\n\t\t\t\t\t\tthis.writeLog(\n\t\t\t\t\t\t\t`[Adapter v.${this.version} axios v.${axios.VERSION} apiCall] error: ${error.response.status} ${error.message} - Invalid Token`,\n\t\t\t\t\t\t\t'error',\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\treturn error.response;\n\t\t\t\t} else if (error.response.status === 404) {\n\t\t\t\t\tthis.writeLog(\n\t\t\t\t\t\t`[Adapter v.${this.version} axios v.${axios.VERSION} apiCall] error: ${error.response.status} ${error.message} - Invalid URL Path`,\n\t\t\t\t\t\t'error',\n\t\t\t\t\t);\n\t\t\t\t\treturn error.response;\n\t\t\t\t} else if (error.response.status === 500) {\n\t\t\t\t\tthis.writeLog(\n\t\t\t\t\t\t`[Adapter v.${this.version} axios v.${axios.VERSION} apiCall] error: ${error.response.status} ${error.message} - internal server error`,\n\t\t\t\t\t\t'error',\n\t\t\t\t\t);\n\t\t\t\t\treturn;\n\t\t\t\t} else {\n\t\t\t\t\tthis.writeLog(\n\t\t\t\t\t\t`[Adapter v.${this.version} axios v.${axios.VERSION} apiCall] error: ${error}`,\n\t\t\t\t\t\t'error',\n\t\t\t\t\t);\n\t\t\t\t\treturn error.response;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (error.code === 'ECONNREFUSED') {\n\t\t\t\t\tthis.writeLog(\n\t\t\t\t\t\t`[Adapter v.${this.version} axios v.${axios.VERSION} apiCall] error: ${error.code} - Connection refused Message: ${error.message}`,\n\t\t\t\t\t\t'error',\n\t\t\t\t\t);\n\t\t\t\t\treturn error;\n\t\t\t\t}\n\t\t\t\tif (error.code === 'ECONNRESET') {\n\t\t\t\t\tthis.writeLog(\n\t\t\t\t\t\t`[Adapter v.${this.version} axios v.${axios.VERSION} apiCall] error: ${error.code} - Connection reset by peer Message: ${error.message}`,\n\t\t\t\t\t\t'error',\n\t\t\t\t\t);\n\t\t\t\t\treturn error;\n\t\t\t\t}\n\t\t\t\tif (error.code === 'ETIMEDOUT') {\n\t\t\t\t\tthis.writeLog(\n\t\t\t\t\t\t`[Adapter v.${this.version} axios v.${axios.VERSION} apiCall] error: ${error.code} - Connection timed out Message: ${error.message}`,\n\t\t\t\t\t\t'error',\n\t\t\t\t\t);\n\t\t\t\t\treturn error;\n\t\t\t\t}\n\t\t\t\tif (error.code === 'ENOTFOUND') {\n\t\t\t\t\tthis.writeLog(\n\t\t\t\t\t\t`[Adapter v.${this.version} axios v.${axios.VERSION} apiCall] error: ${error.code} - DNS lookup failed Message: ${error.message}`,\n\t\t\t\t\t\t'error',\n\t\t\t\t\t);\n\t\t\t\t\treturn error;\n\t\t\t\t}\n\t\t\t\tif (error.code === 'EHOSTUNREACH') {\n\t\t\t\t\tthis.writeLog(\n\t\t\t\t\t\t`[Adapter v.${this.version} axios v.${axios.VERSION} apiCall] error: ${error.code} - Host is unreachable Message: ${error.message}`,\n\t\t\t\t\t\t'error',\n\t\t\t\t\t);\n\t\t\t\t\treturn error;\n\t\t\t\t}\n\t\t\t\tthis.writeLog(\n\t\t\t\t\t`[Adapter v.${this.version} axios v.${axios.VERSION} apiCall] error Code: ${error.code} Message: ${error.message}`,\n\t\t\t\t\t'error',\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async sendCommand(id: string, state: ioBroker.State): Promise<void> {\n\t\tthis.writeLog(`[Adapter v.${this.version} sendCommand] prepare to send the command for ${id}`, 'debug');\n\n\t\t// get the room from the id\n\t\tconst name = id.split('.')[0].replace('box_', '');\n\t\t// get the channel from the id\n\t\tconst channel = id.split('.')[1];\n\t\t// get the channel2 from the id\n\t\tconst channel2 = id.split('.')[2];\n\t\t// get the command from the id\n\t\tconst commandWord = id.split('.').pop();\n\n\t\tlet boxConfig = null;\n\t\tfor (const devicesKey in this.config.devices) {\n\t\t\t// find the config for the name in this.config.devices\n\t\t\tif ((await replaceFunktion(this.config.devices[devicesKey].name)) === name) {\n\t\t\t\tboxConfig = this.config.devices[devicesKey];\n\t\t\t}\n\t\t}\n\t\tthis.writeLog(\n\t\t\t`[Adapter v.${this.version} sendCommand] get the boxConfig: ${JSON.stringify(boxConfig)}`,\n\t\t\t'debug',\n\t\t);\n\n\t\t// if no config was found, return\n\t\tif (!boxConfig) {\n\t\t\tthis.writeLog(`[Adapter v.${this.version} sendCommand] no boxConfig found for ${name}`, 'error');\n\t\t\treturn;\n\t\t}\n\n\t\t// create the Url for the request\n\t\tlet url: string;\n\t\t// check if the commandWord same as the channel2\n\t\tif (commandWord === channel2) {\n\t\t\turl = `https://${boxConfig.ip}/api/v1/${channel}`;\n\t\t} else {\n\t\t\t// if not, add the channel2 to the url\n\t\t\turl = `https://${boxConfig.ip}/api/v1/${channel}/${channel2}`;\n\t\t}\n\t\tthis.writeLog(`[Adapter v.${this.version} sendCommand] assemble the url ${url}`, 'debug');\n\n\t\t// send the request\n\t\tthis.writeLog(`[Adapter v.${this.version} sendCommand] send the request to ${url}`, 'debug');\n\t\tconst response = await this.apiCall(url, boxConfig, 'put', {\n\t\t\t[commandWord as string]: state.val,\n\t\t});\n\n\t\t// check if the request was successful\n\t\tif (response.status === 200) {\n\t\t\tif (this.requestTimer) this.clearTimeout(this.requestTimer);\n\t\t\tthis.writeLog(`[Adapter v.${this.version} sendCommand] ${id} was changed to ${state.val}`, 'debug');\n\t\t\tawait this.setStateAsync(id, state.val, true);\n\t\t\t// start call all the states to update the values\n\t\t\tawait this.request();\n\t\t} else {\n\t\t\tthis.writeLog(\n\t\t\t\t`[Adapter v.${this.version} sendCommand] response status: ${response.status} - ${response.statusText}`,\n\t\t\t\t'error',\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate async createStates(): Promise<void> {\n\t\tif (this.config.devices) {\n\t\t\tfor (const key in this.config.devices) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(this.config.devices, key)) {\n\t\t\t\t\tconst result = await this.apiCall(\n\t\t\t\t\t\t`https://${this.config.devices[key].ip}/api/v1`,\n\t\t\t\t\t\tthis.config.devices[key],\n\t\t\t\t\t\t'GET',\n\t\t\t\t\t);\n\t\t\t\t\tif (!result) {\n\t\t\t\t\t\tthis.writeLog(\n\t\t\t\t\t\t\t`[Adapter v.${this.version} createObjects]  no result found for ${this.config.devices[key].ip} createStates is aborted`,\n\t\t\t\t\t\t\t'error',\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tconst data = result.data as ApiResult;\n\t\t\t\t\tif (data === undefined) {\n\t\t\t\t\t\tthis.writeLog(`[Adapter v.${this.version} createObjects] no data received`, `error`);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif (result.status === 401) {\n\t\t\t\t\t\tif (result.data.code === 2) {\n\t\t\t\t\t\t\tthis.writeLog(`[Adapter v.${this.version} createObjects] invalid token`, `error`);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.writeLog(`[Adapter v.${this.version} createObjects] Authentication failed`, `error`);\n\t\t\t\t\t}\n\t\t\t\t\tthis.writeLog(`[Adapter v.${this.version} createObjects] initializing Object creation`, 'debug');\n\n\t\t\t\t\t// create the states for the devices\n\t\t\t\t\tif (!this.config.devices) return this.writeLog(`No devices configured`, 'warn');\n\n\t\t\t\t\t// get the current space and replace all special characters, so it can be used as id\n\t\t\t\t\tconst name = await replaceFunktion(this.config.devices[key].name);\n\n\t\t\t\t\t// create the device\n\t\t\t\t\tthis.writeLog(\n\t\t\t\t\t\t`[Adapter v.${this.version} createObjects] creating device with Name  box_${name}`,\n\t\t\t\t\t\t'debug',\n\t\t\t\t\t);\n\n\t\t\t\t\tawait this.setObjectNotExistsAsync(`box_${name}`, {\n\t\t\t\t\t\ttype: 'device',\n\t\t\t\t\t\tcommon: {\n\t\t\t\t\t\t\tname: this.config.devices[key].name,\n\t\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\tstatusStates: {\n\t\t\t\t\t\t\t\tonlineId: `${this.namespace}.box_${name}.reachable`,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tnative: {\n\t\t\t\t\t\t\tid: this.config.devices[key].id ? this.config.devices[key].id : 'no id',\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\n\t\t\t\t\t// create the info JSON state\n\t\t\t\t\tawait this.setObjectNotExistsAsync(`box_${name}.json`, {\n\t\t\t\t\t\ttype: 'state',\n\t\t\t\t\t\tcommon: {\n\t\t\t\t\t\t\tname: 'response JSON',\n\t\t\t\t\t\t\tdesc: 'The data JSON from the request',\n\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\trole: 'json',\n\t\t\t\t\t\t\tdef: '',\n\t\t\t\t\t\t\tread: true,\n\t\t\t\t\t\t\twrite: false,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tnative: {},\n\t\t\t\t\t});\n\n\t\t\t\t\t// create a state for the Accessibility\n\t\t\t\t\tawait this.setObjectNotExistsAsync(`box_${name}.reachable`, {\n\t\t\t\t\t\ttype: 'state',\n\t\t\t\t\t\tcommon: {\n\t\t\t\t\t\t\tname: 'reachable',\n\t\t\t\t\t\t\tdesc: 'Is the box reachable',\n\t\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\t\trole: 'indicator.reachable',\n\t\t\t\t\t\t\tdef: false,\n\t\t\t\t\t\t\tread: true,\n\t\t\t\t\t\t\twrite: false,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tnative: {},\n\t\t\t\t\t});\n\n\t\t\t\t\tthis.writeLog(\n\t\t\t\t\t\t`[Adapter v.${this.version} createObjects] creating channel and states for device`,\n\t\t\t\t\t\t'debug',\n\t\t\t\t\t);\n\t\t\t\t\t// create the channels and states for the device\n\t\t\t\t\tawait this.setObjectNotExistsAsync(`box_${name}.device`, {\n\t\t\t\t\t\ttype: 'channel',\n\t\t\t\t\t\tcommon: {\n\t\t\t\t\t\t\tname: 'device',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tnative: {},\n\t\t\t\t\t});\n\n\t\t\t\t\tfor (const key in deviceChannelObj) {\n\t\t\t\t\t\tif (deviceChannelObj.hasOwnProperty(key)) {\n\t\t\t\t\t\t\tawait this.setObjectNotExistsAsync(`box_${name}.device.${key}`, deviceChannelObj[key]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (const key in deviceStateObj) {\n\t\t\t\t\t\tif (deviceStateObj.hasOwnProperty(key)) {\n\t\t\t\t\t\t\tawait this.setObjectNotExistsAsync(`box_${name}.device.${key}`, deviceStateObj[key]);\n\t\t\t\t\t\t\t// check if the state may be described\n\t\t\t\t\t\t\tif (deviceStateObj[key].common.write) {\n\t\t\t\t\t\t\t\t// check if the state is in subscribedStates\n\t\t\t\t\t\t\t\tif (!this.subscribedStates.includes(`box_${name}.device.${key}`)) {\n\t\t\t\t\t\t\t\t\tthis.writeLog(\n\t\t\t\t\t\t\t\t\t\t`[Adapter v.${this.version} createObjects] subscribe state box_${name}.device.${key}`,\n\t\t\t\t\t\t\t\t\t\t'debug',\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tthis.subscribeStates(`box_${name}.device.${key}`);\n\t\t\t\t\t\t\t\t\tthis.subscribedStates.push(`box_${name}.device.${key}`);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (const key in networkObj) {\n\t\t\t\t\t\tif (networkObj.hasOwnProperty(key)) {\n\t\t\t\t\t\t\tawait this.setObjectNotExistsAsync(`box_${name}.device.wifi.${key}`, networkObj[key]);\n\t\t\t\t\t\t\t// check if the state may be described\n\t\t\t\t\t\t\tif (networkObj[key].common.write) {\n\t\t\t\t\t\t\t\t// check if the state is in subscribedStates\n\t\t\t\t\t\t\t\tif (!this.subscribedStates.includes(`box_${name}.device.wifi.${key}`)) {\n\t\t\t\t\t\t\t\t\tthis.writeLog(\n\t\t\t\t\t\t\t\t\t\t`[Adapter v.${this.version} createObjects] subscribe state box_${name}.device.wifi.${key}`,\n\t\t\t\t\t\t\t\t\t\t'debug',\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tthis.subscribeStates(`box_${name}.device.wifi.${key}`);\n\t\t\t\t\t\t\t\t\tthis.subscribedStates.push(`box_${name}.device.wifi.${key}`);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfor (const key in updateObj) {\n\t\t\t\t\t\tif (updateObj.hasOwnProperty(key)) {\n\t\t\t\t\t\t\tawait this.setObjectNotExistsAsync(`box_${name}.device.update.${key}`, updateObj[key]);\n\t\t\t\t\t\t\t// check if the state may be described\n\t\t\t\t\t\t\tif (updateObj[key].common.write) {\n\t\t\t\t\t\t\t\t// check if the state is in subscribedStates\n\t\t\t\t\t\t\t\tif (!this.subscribedStates.includes(`box_${name}.device.update.${key}`)) {\n\t\t\t\t\t\t\t\t\tthis.writeLog(\n\t\t\t\t\t\t\t\t\t\t`[Adapter v.${this.version} createObjects] subscribe state box_${name}.device.update.${key}`,\n\t\t\t\t\t\t\t\t\t\t'debug',\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tthis.subscribeStates(`box_${name}.device.update.${key}`);\n\t\t\t\t\t\t\t\t\tthis.subscribedStates.push(`box_${name}.device.update.${key}`);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfor (const key in capabilitiesObj) {\n\t\t\t\t\t\tif (capabilitiesObj.hasOwnProperty(key)) {\n\t\t\t\t\t\t\tawait this.setObjectNotExistsAsync(\n\t\t\t\t\t\t\t\t`box_${name}.device.capabilities.${key}`,\n\t\t\t\t\t\t\t\tcapabilitiesObj[key],\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t// check if the state may be described\n\t\t\t\t\t\t\tif (capabilitiesObj[key].common.write) {\n\t\t\t\t\t\t\t\t// check if the state is in subscribedStates\n\t\t\t\t\t\t\t\tif (!this.subscribedStates.includes(`box_${name}.device.capabilities.${key}`)) {\n\t\t\t\t\t\t\t\t\tthis.writeLog(\n\t\t\t\t\t\t\t\t\t\t`[Adapter v.${this.version} createObjects] subscribe state box_${name}.device.capabilities.${key}`,\n\t\t\t\t\t\t\t\t\t\t'debug',\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tthis.subscribeStates(`box_${name}.device.capabilities.${key}`);\n\t\t\t\t\t\t\t\t\tthis.subscribedStates.push(`box_${name}.device.capabilities.${key}`);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.writeLog(\n\t\t\t\t\t\t`[Adapter v.${this.version} createObjects] creating channel and states for hue`,\n\t\t\t\t\t\t'debug',\n\t\t\t\t\t);\n\t\t\t\t\tawait this.setObjectNotExistsAsync(`box_${name}.hue`, {\n\t\t\t\t\t\ttype: 'channel',\n\t\t\t\t\t\tcommon: {\n\t\t\t\t\t\t\tname: 'hue',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tnative: {},\n\t\t\t\t\t});\n\n\t\t\t\t\tfor (const key in hueChannelObj) {\n\t\t\t\t\t\tif (hueChannelObj.hasOwnProperty(key)) {\n\t\t\t\t\t\t\tawait this.setObjectNotExistsAsync(`box_${name}.hue.${key}`, hueChannelObj[key]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (const key in hueObj) {\n\t\t\t\t\t\tif (hueObj.hasOwnProperty(key)) {\n\t\t\t\t\t\t\tawait this.setObjectNotExistsAsync(`box_${name}.hue.${key}`, hueObj[key]);\n\t\t\t\t\t\t\t// check if the state may be described\n\t\t\t\t\t\t\tif (hueObj[key].common.write) {\n\t\t\t\t\t\t\t\t// check if the state is in subscribedStates\n\t\t\t\t\t\t\t\tif (!this.subscribedStates.includes(`box_${name}.hue.${key}`)) {\n\t\t\t\t\t\t\t\t\tthis.writeLog(\n\t\t\t\t\t\t\t\t\t\t`[Adapter v.${this.version} createObjects] subscribe state box_${name}.hue.${key}`,\n\t\t\t\t\t\t\t\t\t\t'debug',\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tthis.subscribeStates(`box_${name}.hue.${key}`);\n\t\t\t\t\t\t\t\t\tthis.subscribedStates.push(`box_${name}.hue.${key}`);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfor (const groupKey in data.hue.groups) {\n\t\t\t\t\t\tfor (const key in groupsObj) {\n\t\t\t\t\t\t\tif (groupsObj.hasOwnProperty(key)) {\n\t\t\t\t\t\t\t\tawait this.setObjectNotExistsAsync(\n\t\t\t\t\t\t\t\t\t`box_${name}.hue.groups.${groupKey}.${key}`,\n\t\t\t\t\t\t\t\t\tgroupsObj[key],\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t// check if the state may be described\n\t\t\t\t\t\t\t\tif (groupsObj[key].common.write) {\n\t\t\t\t\t\t\t\t\t// check if the state is in subscribedStates\n\t\t\t\t\t\t\t\t\tif (!this.subscribedStates.includes(`box_${name}.hue.groups.${groupKey}.${key}`)) {\n\t\t\t\t\t\t\t\t\t\tthis.writeLog(\n\t\t\t\t\t\t\t\t\t\t\t`[Adapter v.${this.version} createObjects] subscribe state box_${name}.hue.groups.${groupKey}.${key}`,\n\t\t\t\t\t\t\t\t\t\t\t'debug',\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\tthis.subscribeStates(`box_${name}.hue.groups.${groupKey}.${key}`);\n\t\t\t\t\t\t\t\t\t\tthis.subscribedStates.push(`box_${name}.hue.groups.${groupKey}.${key}`);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.writeLog(\n\t\t\t\t\t\t`[Adapter v.${this.version} createObjects] creating channel and states for execution`,\n\t\t\t\t\t\t'debug',\n\t\t\t\t\t);\n\t\t\t\t\tawait this.setObjectNotExistsAsync(`box_${name}.execution`, {\n\t\t\t\t\t\ttype: 'channel',\n\t\t\t\t\t\tcommon: {\n\t\t\t\t\t\t\tname: 'execution',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tnative: {},\n\t\t\t\t\t});\n\n\t\t\t\t\tfor (const key in executionChannelObj) {\n\t\t\t\t\t\tif (executionChannelObj.hasOwnProperty(key)) {\n\t\t\t\t\t\t\tawait this.setObjectNotExistsAsync(\n\t\t\t\t\t\t\t\t`box_${name}.execution.${key}`,\n\t\t\t\t\t\t\t\texecutionChannelObj[key],\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (const key in executionObj) {\n\t\t\t\t\t\tif (executionObj.hasOwnProperty(key)) {\n\t\t\t\t\t\t\t// check if the key is hueTarget\n\t\t\t\t\t\t\tif (key === 'hueTarget') {\n\t\t\t\t\t\t\t\tconst hueTargetObj: { [key: string]: string } = {};\n\t\t\t\t\t\t\t\tfor (const dataKey in data.hue.groups) {\n\t\t\t\t\t\t\t\t\tif (data.hue.groups.hasOwnProperty(dataKey)) {\n\t\t\t\t\t\t\t\t\t\tif (!this.hueTarget.some((element) => element.id === dataKey)) {\n\t\t\t\t\t\t\t\t\t\t\tthis.hueTarget.push({ id: dataKey, name: data.hue.groups[dataKey].name });\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tfor (const hueTargetKey in this.hueTarget) {\n\t\t\t\t\t\t\t\t\tif (this.hueTarget.hasOwnProperty(hueTargetKey)) {\n\t\t\t\t\t\t\t\t\t\t//\n\t\t\t\t\t\t\t\t\t\thueTargetObj[this.hueTarget[hueTargetKey].id] =\n\t\t\t\t\t\t\t\t\t\t\tthis.hueTarget[hueTargetKey].name;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// get the oldObject from execution.hueTarget\n\t\t\t\t\t\t\t\tconst oldObj = await this.getObjectAsync(`box_${name}.execution.${key}`);\n\t\t\t\t\t\t\t\tif (oldObj) {\n\t\t\t\t\t\t\t\t\t// change the common.states of the oldObject to the new states\n\t\t\t\t\t\t\t\t\toldObj.common.states = hueTargetObj;\n\t\t\t\t\t\t\t\t\tawait this.setObjectAsync(`box_${name}.execution.${key}`, oldObj);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t// create a new object if it does not exist yet and set the states\n\t\t\t\t\t\t\t\t\tawait this.setObjectNotExistsAsync(`box_${name}.execution.${key}`, {\n\t\t\t\t\t\t\t\t\t\t...executionObj[key],\n\t\t\t\t\t\t\t\t\t\tcommon: {\n\t\t\t\t\t\t\t\t\t\t\t...executionObj[key].common,\n\t\t\t\t\t\t\t\t\t\t\tstates: hueTargetObj,\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (!this.subscribedStates.includes(`box_${name}.execution.${key}`)) {\n\t\t\t\t\t\t\t\t\tthis.writeLog(\n\t\t\t\t\t\t\t\t\t\t`[Adapter v.${this.version} axios v.${axios.VERSION} createObjects] subscribe state box_${name}.execution.${key}`,\n\t\t\t\t\t\t\t\t\t\t'debug',\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tthis.subscribeStates(`box_${name}.execution.${key}`);\n\t\t\t\t\t\t\t\t\tthis.subscribedStates.push(`box_${name}.execution.${key}`);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (key === 'hdmiSource') {\n\t\t\t\t\t\t\t\tconst hdmiSourceObj: { [key: string]: string } = {};\n\t\t\t\t\t\t\t\tfor (const dataKey in data.hdmi) {\n\t\t\t\t\t\t\t\t\tif (data.hdmi.hasOwnProperty(dataKey)) {\n\t\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t\tdataKey === 'input1' ||\n\t\t\t\t\t\t\t\t\t\t\tdataKey === 'input2' ||\n\t\t\t\t\t\t\t\t\t\t\tdataKey === 'input3' ||\n\t\t\t\t\t\t\t\t\t\t\tdataKey === 'input4'\n\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\tif (!this.hdmiSource.some((element) => element.id === dataKey)) {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.hdmiSource.push({ id: dataKey, name: data.hdmi[dataKey].name });\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tfor (const hdmiSourceKey in this.hdmiSource) {\n\t\t\t\t\t\t\t\t\tif (this.hdmiSource.hasOwnProperty(hdmiSourceKey)) {\n\t\t\t\t\t\t\t\t\t\t//\n\t\t\t\t\t\t\t\t\t\thdmiSourceObj[this.hdmiSource[hdmiSourceKey].id] =\n\t\t\t\t\t\t\t\t\t\t\tthis.hdmiSource[hdmiSourceKey].name;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// get the oldObject from hue-sync-box.0.box_dev.execution.hdmiSource\n\t\t\t\t\t\t\t\tconst oldObj = await this.getObjectAsync(`box_${name}.execution.${key}`);\n\t\t\t\t\t\t\t\tif (oldObj) {\n\t\t\t\t\t\t\t\t\t// change the common.states of the oldObject to the new states\n\t\t\t\t\t\t\t\t\toldObj.common.states = hdmiSourceObj;\n\t\t\t\t\t\t\t\t\tawait this.setObjectAsync(`box_${name}.execution.${key}`, oldObj);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t// create a new object if it does not exist yet and set the states\n\t\t\t\t\t\t\t\t\tawait this.setObjectNotExistsAsync(`box_${name}.execution.${key}`, {\n\t\t\t\t\t\t\t\t\t\t...executionObj[key],\n\t\t\t\t\t\t\t\t\t\tcommon: {\n\t\t\t\t\t\t\t\t\t\t\t...executionObj[key].common,\n\t\t\t\t\t\t\t\t\t\t\tstates: hdmiSourceObj,\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (!this.subscribedStates.includes(`box_${name}.execution.${key}`)) {\n\t\t\t\t\t\t\t\t\tthis.writeLog(\n\t\t\t\t\t\t\t\t\t\t`[Adapter v.${this.version} createObjects] subscribe state box_${name}.execution.${key}`,\n\t\t\t\t\t\t\t\t\t\t'debug',\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tthis.subscribeStates(`box_${name}.execution.${key}`);\n\t\t\t\t\t\t\t\t\tthis.subscribedStates.push(`box_${name}.execution.${key}`);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t//\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tawait this.setObjectNotExistsAsync(`box_${name}.execution.${key}`, executionObj[key]);\n\t\t\t\t\t\t\t\t// check if the state may be described\n\t\t\t\t\t\t\t\tif (executionObj[key].common.write) {\n\t\t\t\t\t\t\t\t\t// check if the state is in subscribedStates\n\t\t\t\t\t\t\t\t\tif (!this.subscribedStates.includes(`box_${name}.execution.${key}`)) {\n\t\t\t\t\t\t\t\t\t\tthis.writeLog(\n\t\t\t\t\t\t\t\t\t\t\t`[Adapter v.${this.version} createObjects] subscribe state box_${name}.execution.${key}`,\n\t\t\t\t\t\t\t\t\t\t\t'debug',\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\tthis.subscribeStates(`box_${name}.execution.${key}`);\n\t\t\t\t\t\t\t\t\t\tthis.subscribedStates.push(`box_${name}.execution.${key}`);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tconst array = ['game', 'music', 'video'];\n\t\t\t\t\tfor (const arrayKey in array) {\n\t\t\t\t\t\tif (array.hasOwnProperty(arrayKey)) {\n\t\t\t\t\t\t\tif (array[arrayKey] !== 'music') {\n\t\t\t\t\t\t\t\tfor (const key in video_gameObj) {\n\t\t\t\t\t\t\t\t\tif (video_gameObj.hasOwnProperty(key)) {\n\t\t\t\t\t\t\t\t\t\tawait this.setObjectNotExistsAsync(\n\t\t\t\t\t\t\t\t\t\t\t`box_${name}.execution.${array[arrayKey]}.${key}`,\n\t\t\t\t\t\t\t\t\t\t\tvideo_gameObj[key],\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t// check if the state may be described\n\t\t\t\t\t\t\t\t\t\tif (video_gameObj[key].common.write) {\n\t\t\t\t\t\t\t\t\t\t\t// check if the state is in subscribedStates\n\t\t\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t\t\t!this.subscribedStates.includes(\n\t\t\t\t\t\t\t\t\t\t\t\t\t`box_${name}.execution.${array[arrayKey]}.${key}`,\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.writeLog(\n\t\t\t\t\t\t\t\t\t\t\t\t\t`[Adapter v.${this.version} createObjects] subscribe state box_${name}.execution.${array[arrayKey]}.${key}`,\n\t\t\t\t\t\t\t\t\t\t\t\t\t'debug',\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\tthis.subscribeStates(`box_${name}.execution.${array[arrayKey]}.${key}`);\n\t\t\t\t\t\t\t\t\t\t\t\tthis.subscribedStates.push(\n\t\t\t\t\t\t\t\t\t\t\t\t\t`box_${name}.execution.${array[arrayKey]}.${key}`,\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tfor (const key in musicObj) {\n\t\t\t\t\t\t\t\t\tif (musicObj.hasOwnProperty(key)) {\n\t\t\t\t\t\t\t\t\t\tawait this.setObjectNotExistsAsync(\n\t\t\t\t\t\t\t\t\t\t\t`box_${name}.execution.${array[arrayKey]}.${key}`,\n\t\t\t\t\t\t\t\t\t\t\tmusicObj[key],\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t// check if the state may be described\n\t\t\t\t\t\t\t\t\t\tif (musicObj[key].common.write) {\n\t\t\t\t\t\t\t\t\t\t\t// check if the state is in subscribedStates\n\t\t\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t\t\t!this.subscribedStates.includes(\n\t\t\t\t\t\t\t\t\t\t\t\t\t`box_${name}.execution.${array[arrayKey]}.${key}`,\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.writeLog(\n\t\t\t\t\t\t\t\t\t\t\t\t\t`[Adapter v.${this.version} createObjects] subscribe state box_${name}.execution.${array[arrayKey]}.${key}`,\n\t\t\t\t\t\t\t\t\t\t\t\t\t'debug',\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\tthis.subscribeStates(`box_${name}.execution.${array[arrayKey]}.${key}`);\n\t\t\t\t\t\t\t\t\t\t\t\tthis.subscribedStates.push(\n\t\t\t\t\t\t\t\t\t\t\t\t\t`box_${name}.execution.${array[arrayKey]}.${key}`,\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.writeLog(\n\t\t\t\t\t\t`[Adapter v.${this.version} createObjects] creating channel and states for hdmi`,\n\t\t\t\t\t\t'debug',\n\t\t\t\t\t);\n\t\t\t\t\tawait this.setObjectNotExistsAsync(`box_${name}.hdmi`, {\n\t\t\t\t\t\ttype: 'channel',\n\t\t\t\t\t\tcommon: {\n\t\t\t\t\t\t\tname: 'hdmi',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tnative: {},\n\t\t\t\t\t});\n\n\t\t\t\t\tfor (const key in hdmiChannelObj) {\n\t\t\t\t\t\tif (hdmiChannelObj.hasOwnProperty(key)) {\n\t\t\t\t\t\t\tawait this.setObjectNotExistsAsync(`box_${name}.hdmi.${key}`, hdmiChannelObj[key]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (const key in hdmiObj) {\n\t\t\t\t\t\tif (hdmiObj.hasOwnProperty(key)) {\n\t\t\t\t\t\t\tawait this.setObjectNotExistsAsync(`box_${name}.hdmi.${key}`, hdmiObj[key]);\n\t\t\t\t\t\t\t// check if the state may be described\n\t\t\t\t\t\t\tif (hdmiObj[key].common.write) {\n\t\t\t\t\t\t\t\t// check if the state is in subscribedStates\n\t\t\t\t\t\t\t\tif (!this.subscribedStates.includes(`box_${name}.hdmi.${key}`)) {\n\t\t\t\t\t\t\t\t\tthis.writeLog(\n\t\t\t\t\t\t\t\t\t\t`[Adapter v.${this.version} createObjects] subscribe state box_${name}.hdmi.${key}`,\n\t\t\t\t\t\t\t\t\t\t'debug',\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tthis.subscribeStates(`box_${name}.hdmi.${key}`);\n\t\t\t\t\t\t\t\t\tthis.subscribedStates.push(`box_${name}.hdmi.${key}`);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (const key in hdmiInputObj) {\n\t\t\t\t\t\tif (hdmiInputObj.hasOwnProperty(key)) {\n\t\t\t\t\t\t\tfor (let i = 1; i < 5; i++) {\n\t\t\t\t\t\t\t\tawait this.setObjectNotExistsAsync(\n\t\t\t\t\t\t\t\t\t`box_${name}.hdmi.input${i}.${key}`,\n\t\t\t\t\t\t\t\t\thdmiInputObj[key],\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t// check if the state may be described\n\t\t\t\t\t\t\t\tif (hdmiInputObj[key].common.write) {\n\t\t\t\t\t\t\t\t\t// check if the state is in subscribedStates\n\t\t\t\t\t\t\t\t\tif (!this.subscribedStates.includes(`box_${name}.hdmi.input${i}.${key}`)) {\n\t\t\t\t\t\t\t\t\t\tthis.writeLog(\n\t\t\t\t\t\t\t\t\t\t\t`[Adapter v.${this.version} createObjects] subscribe state box_${name}.hdmi.input${i}.${key}`,\n\t\t\t\t\t\t\t\t\t\t\t'debug',\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\tthis.subscribeStates(`box_${name}.hdmi.input${i}.${key}`);\n\t\t\t\t\t\t\t\t\t\tthis.subscribedStates.push(`box_${name}.hdmi.input${i}.${key}`);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tawait this.setObjectNotExistsAsync(`box_${name}.hdmi.output.${key}`, hdmiInputObj[key]);\n\t\t\t\t\t\t// check if the state may be described\n\t\t\t\t\t\tif (hdmiInputObj[key].common.write) {\n\t\t\t\t\t\t\t// check if the state is in subscribedStates\n\t\t\t\t\t\t\tif (!this.subscribedStates.includes(`box_${name}.hdmi.output.${key}`)) {\n\t\t\t\t\t\t\t\tthis.writeLog(\n\t\t\t\t\t\t\t\t\t`[Adapter v.${this.version} createObjects] subscribe state box_${name}.hdmi.output.${key}`,\n\t\t\t\t\t\t\t\t\t'debug',\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tthis.subscribeStates(`box_${name}.hdmi.output.${key}`);\n\t\t\t\t\t\t\t\tthis.subscribedStates.push(`box_${name}.hdmi.output.${key}`);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.writeLog(\n\t\t\t\t\t\t`[Adapter v.${this.version} createObjects] creating channel and states for behavior`,\n\t\t\t\t\t\t'debug',\n\t\t\t\t\t);\n\t\t\t\t\tawait this.setObjectNotExistsAsync(`box_${name}.behavior`, {\n\t\t\t\t\t\ttype: 'channel',\n\t\t\t\t\t\tcommon: {\n\t\t\t\t\t\t\tname: 'behavior',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tnative: {},\n\t\t\t\t\t});\n\n\t\t\t\t\tfor (const key in behaviorChannelObj) {\n\t\t\t\t\t\tif (behaviorChannelObj.hasOwnProperty(key)) {\n\t\t\t\t\t\t\tawait this.setObjectNotExistsAsync(`box_${name}.behavior.${key}`, behaviorChannelObj[key]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (const key in behaviorObj) {\n\t\t\t\t\t\tif (behaviorObj.hasOwnProperty(key)) {\n\t\t\t\t\t\t\tawait this.setObjectNotExistsAsync(`box_${name}.behavior.${key}`, behaviorObj[key]);\n\t\t\t\t\t\t\t// check if the state may be described\n\t\t\t\t\t\t\tif (behaviorObj[key].common.write) {\n\t\t\t\t\t\t\t\t// check if the state is in subscribedStates\n\t\t\t\t\t\t\t\tif (!this.subscribedStates.includes(`box_${name}.behavior.${key}`)) {\n\t\t\t\t\t\t\t\t\tthis.writeLog(\n\t\t\t\t\t\t\t\t\t\t`[Adapter v.${this.version} createObjects] subscribe state box_${name}.behavior.${key}`,\n\t\t\t\t\t\t\t\t\t\t'debug',\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tthis.subscribeStates(`box_${name}.behavior.${key}`);\n\t\t\t\t\t\t\t\t\tthis.subscribedStates.push(`box_${name}.behavior.${key}`);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (const key in behaviorInputObj) {\n\t\t\t\t\t\tif (behaviorInputObj.hasOwnProperty(key)) {\n\t\t\t\t\t\t\tfor (let i = 1; i < 5; i++) {\n\t\t\t\t\t\t\t\tawait this.setObjectNotExistsAsync(\n\t\t\t\t\t\t\t\t\t`box_${name}.behavior.input${i}.${key}`,\n\t\t\t\t\t\t\t\t\tbehaviorInputObj[key],\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t// check if the state may be described\n\t\t\t\t\t\t\t\tif (behaviorInputObj[key].common.write) {\n\t\t\t\t\t\t\t\t\t// check if the state is in subscribedStates\n\t\t\t\t\t\t\t\t\tif (!this.subscribedStates.includes(`box_${name}.behavior.input${i}.${key}`)) {\n\t\t\t\t\t\t\t\t\t\tthis.writeLog(\n\t\t\t\t\t\t\t\t\t\t\t`[Adapter v.${this.version} createObjects] subscribe state box_${name}.behavior.input${i}.${key}`,\n\t\t\t\t\t\t\t\t\t\t\t'debug',\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\tthis.subscribeStates(`box_${name}.behavior.input${i}.${key}`);\n\t\t\t\t\t\t\t\t\t\tthis.subscribedStates.push(`box_${name}.behavior.input${i}.${key}`);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.writeLog(\n\t\t\t\t\t\t`[Adapter v.${this.version} createObjects] all device / channel and states were created for ${name}`,\n\t\t\t\t\t\t'debug',\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthis.writeLog(\n\t\t\t\t`[Adapter v.${this.version} createObjects] no devices configured, please configure the adapter`,\n\t\t\t\t'warn',\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * @description a function for log output\n\t */\n\tprivate writeLog(logText: string, logType: 'silly' | 'info' | 'debug' | 'warn' | 'error'): void {\n\t\tif (logType === 'warn' || logType === 'error') {\n\t\t\tif (this.messageHandler.length > 0) {\n\t\t\t\t// check if the logText is not in the messageHandler\n\t\t\t\tif (!this.messageHandler.find((message) => message.message === logText)) {\n\t\t\t\t\t// push the logText to the messageHandler\n\t\t\t\t\tthis.messageHandler.push({\n\t\t\t\t\t\tseverity: logType,\n\t\t\t\t\t\tclearTimer: false,\n\t\t\t\t\t\tmessage: logText,\n\t\t\t\t\t});\n\t\t\t\t\tif (logType === 'warn') this.log.warn(logText);\n\t\t\t\t\tif (logType === 'error') this.log.error(logText);\n\t\t\t\t\tthis.log.debug(\n\t\t\t\t\t\t`[Adapter v.${this.version} writeLog] messageHandler: ` + JSON.stringify(this.messageHandler),\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tif (!this.messageHandler.find((message) => message.message === logText).clearTimer) {\n\t\t\t\t\t\t// set the clearTimer to true\n\t\t\t\t\t\tthis.messageHandler.find((message) => message.message === logText).clearTimer = true;\n\t\t\t\t\t\t// set the clearTimer to false and clear the messageHandler for the logText after 5 min\n\t\t\t\t\t\tthis.messageHandlerTimer = this.setTimeout(() => {\n\t\t\t\t\t\t\tthis.messageHandler.find((message) => message.message === logText).clearTimer = false;\n\t\t\t\t\t\t\tthis.messageHandler = this.messageHandler.filter((message) => message.message !== logText);\n\t\t\t\t\t\t\tthis.log.debug(`[Adapter v.${this.version} writeLog] clear messageHandler for ${logText}`);\n\t\t\t\t\t\t}, 300000);\n\t\t\t\t\t}\n\t\t\t\t\tthis.log.debug(\n\t\t\t\t\t\t`[Adapter v.${this.version} writeLog] messageHandler: ` + JSON.stringify(this.messageHandler),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// push the logText to the messageHandler\n\t\t\t\tthis.messageHandler.push({\n\t\t\t\t\tseverity: logType,\n\t\t\t\t\tclearTimer: false,\n\t\t\t\t\tmessage: logText,\n\t\t\t\t});\n\t\t\t\tif (logType === 'warn') this.log.warn(logText);\n\t\t\t\tif (logType === 'error') this.log.error(logText);\n\t\t\t\tthis.log.debug(\n\t\t\t\t\t`[Adapter v.${this.version} writeLog] messageHandler: ` + JSON.stringify(this.messageHandler),\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\tif (logType === 'silly') this.log.silly(logText);\n\t\t\tif (logType === 'info') this.log.info(logText);\n\t\t\tif (logType === 'debug') this.log.debug(logText);\n\t\t}\n\t}\n\n\tprivate async registration(obj: ioBroker.Message): Promise<any> {\n\t\tthis.requestCounter++;\n\t\ttry {\n\t\t\tthis.writeLog(\n\t\t\t\t`[Adapter v.${this.version} axios v.${axios.VERSION} registration] start registrations`,\n\t\t\t\t`info`,\n\t\t\t);\n\t\t\tconst device = obj.message as { ip: string; name: string };\n\t\t\tconst registrationsUrl = `https://${device.ip}/api/v1/registrations`;\n\n\t\t\t// create agent for https request\n\t\t\tconst agent = new https.Agent({\n\t\t\t\trejectUnauthorized: false,\n\t\t\t});\n\t\t\t// create the request with the agent and data\n\t\t\tconst registrations = await axios.post(\n\t\t\t\tregistrationsUrl,\n\t\t\t\t{\n\t\t\t\t\tappName: 'ioBroker',\n\t\t\t\t\tinstanceName: `hue_sync_box_${device.name}`,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\thttpsAgent: agent,\n\t\t\t\t},\n\t\t\t);\n\t\t\tif (registrations.status === 200) {\n\t\t\t\tthis.writeLog(\n\t\t\t\t\t`[Adapter v.${this.version} axios v.${axios.VERSION} registration] registration for ${device.name} was successful`,\n\t\t\t\t\t'info',\n\t\t\t\t);\n\n\t\t\t\tif (registrations.data.accessToken) {\n\t\t\t\t\tif (obj.callback) this.sendTo(obj.from, obj.command, registrations.data, obj.callback);\n\t\t\t\t\tthis.requestCounter = 5;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconst device = obj.message as { ip: string; name: string };\n\n\t\t\tif (error.code === 'ETIMEDOUT') {\n\t\t\t\tthis.writeLog(\n\t\t\t\t\t`[Adapter v.${this.version} axios v.${axios.VERSION} registration] registration for ${device.name} failed, timeout. > message => ${error.message} Stack: ${error.stack} <`,\n\t\t\t\t\t'error',\n\t\t\t\t);\n\t\t\t\tconst response = {\n\t\t\t\t\tcode: error.code,\n\t\t\t\t\tmessage: error.message,\n\t\t\t\t};\n\t\t\t\tif (obj.callback) this.sendTo(obj.from, obj.command, response, obj.callback);\n\t\t\t\tthis.requestCounter = 5;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (error.response) {\n\t\t\t\tif (error.response.status === 400) {\n\t\t\t\t\tif (error.response.data.code === 16) {\n\t\t\t\t\t\tconst response = error.response.data;\n\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t`[Adapter v.${this.version} axios v.${\n\t\t\t\t\t\t\t\taxios.VERSION\n\t\t\t\t\t\t\t} registration] Code: 16 => ${JSON.stringify(response)}`,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tthis.writeLog(\n\t\t\t\t\t\t\t`[Adapter v.${this.version} axios v.${\n\t\t\t\t\t\t\t\taxios.VERSION\n\t\t\t\t\t\t\t} registration] Code: 16 => ${JSON.stringify(response)}`,\n\t\t\t\t\t\t\t'debug',\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t`[Adapter v.${this.version} axios v.${axios.VERSION} registration] registration for ${device.name} failed, error: ${error.response.statusText} > message => ${error.message} Stack: ${error.stack} <`,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tthis.writeLog(\n\t\t\t\t\t\t\t`[Adapter v.${this.version} axios v.${axios.VERSION} registration] registration for ${device.name} failed, error: ${error.response.statusText} > message => ${error.message} Stack: ${error.stack} <`,\n\t\t\t\t\t\t\t'error',\n\t\t\t\t\t\t);\n\t\t\t\t\t\tconst response = {\n\t\t\t\t\t\t\tcode: error.response.status,\n\t\t\t\t\t\t\tcodeString: error.code,\n\t\t\t\t\t\t\tmessage: error.message,\n\t\t\t\t\t\t\tresponseMessage: error.response.statusText,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif (obj.callback) this.sendTo(obj.from, obj.command, response, obj.callback);\n\t\t\t\t\t\tthis.requestCounter = 5;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t`[Adapter v.${this.version} axios v.${axios.VERSION} registration] registration for ${device.name} failed, error: ${error.response.statusText} > message => ${error.message} Stack: ${error.stack} <`,\n\t\t\t\t\t);\n\n\t\t\t\t\tthis.writeLog(\n\t\t\t\t\t\t`[Adapter v.${this.version} axios v.${axios.VERSION} registration] registration for ${device.name} failed, error: ${error.response.statusText} > message => ${error.message} Stack: ${error.stack} <`,\n\t\t\t\t\t\t'error',\n\t\t\t\t\t);\n\t\t\t\t\tconst response = {\n\t\t\t\t\t\tcode: error.response.status,\n\t\t\t\t\t\tcodeString: error.code,\n\t\t\t\t\t\tmessage: error.message,\n\t\t\t\t\t\tresponseMessage: error.response.statusText,\n\t\t\t\t\t};\n\t\t\t\t\tif (obj.callback) this.sendTo(obj.from, obj.command, response, obj.callback);\n\t\t\t\t\tthis.requestCounter = 5;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconsole.log(\n\t\t\t\t\t`[Adapter v.${this.version} axios v.${axios.VERSION} registration] registration for ${device.name} failed, error: ${error.message} > message => ${error.message} Stack: ${error.stack} <`,\n\t\t\t\t);\n\n\t\t\t\tthis.writeLog(\n\t\t\t\t\t`[Adapter v.${this.version} axios v.${axios.VERSION} registration] registration for ${device.name} failed, error: ${error.message} > message => ${error.message} Stack: ${error.stack} <`,\n\t\t\t\t\t'error',\n\t\t\t\t);\n\t\t\t\tconst response = {\n\t\t\t\t\tcode: error.code,\n\t\t\t\t\tmessage: error.message,\n\t\t\t\t};\n\t\t\t\tif (obj.callback) this.sendTo(obj.from, obj.command, response, obj.callback);\n\t\t\t\tthis.requestCounter = 5;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t// create a new timer that runs until the box is registered or the requestCounter is 5\n\t\tif (this.requestCounter < 5) {\n\t\t\tthis.registrationTimer = this.setTimeout(async () => {\n\t\t\t\tawait this.registration(obj);\n\t\t\t}, 4000);\n\t\t} else {\n\t\t\tif (this.registrationTimer) this.clearTimeout(this.registrationTimer);\n\t\t\tthis.requestCounter = 0;\n\t\t\tthis.writeLog(\n\t\t\t\t`[Adapter v.${this.version} axios v.${axios.VERSION} registrations] registration failed`,\n\t\t\t\t`error`,\n\t\t\t);\n\t\t\tconst response = {\n\t\t\t\tcode: 500,\n\t\t\t\tmessage: 'registration failed',\n\t\t\t};\n\t\t\tif (obj.callback) this.sendTo(obj.from, obj.command, response, obj.callback);\n\t\t}\n\t}\n\n\tprivate async requestRegistrationsId(obj: ioBroker.Message): Promise<number | null> {\n\t\ttry {\n\t\t\tconst device = obj.message as { ip: string; name: string; token: string; id: number };\n\t\t\tlet registrationsId = null;\n\t\t\tthis.writeLog(\n\t\t\t\t`[Adapter v.${this.version} axios v.${axios.VERSION} requestRegistrationsId] request registrations id for ${device.name}`,\n\t\t\t\t'info',\n\t\t\t);\n\t\t\tconst registrationsUrl = `https://${device.ip}/api/v1/registrations`;\n\t\t\tconst agent = new https.Agent({ rejectUnauthorized: false });\n\t\t\tconst registrations = await axios.get(registrationsUrl, {\n\t\t\t\theaders: {\n\t\t\t\t\tAuthorization: `Bearer ${this.decrypt(device.token)}`,\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t},\n\t\t\t\thttpsAgent: agent,\n\t\t\t});\n\t\t\tif (registrations.status === 200) {\n\t\t\t\tthis.writeLog(\n\t\t\t\t\t`[Adapter v.${this.version} axios v.${axios.VERSION} requestRegistrationsId] request registrations id for ${device.name} was successful`,\n\t\t\t\t\t'info',\n\t\t\t\t);\n\t\t\t\tfor (const index in registrations.data) {\n\t\t\t\t\tconst instanceName = `hue_sync_box_${device.name}`;\n\n\t\t\t\t\tif (registrations.data[index].instanceName === instanceName) {\n\t\t\t\t\t\tthis.writeLog(\n\t\t\t\t\t\t\t`[Adapter v.${this.version} axios v.${axios.VERSION} requestRegistrationsId] registrations id for ${device.name} is ${index}`,\n\t\t\t\t\t\t\t'info',\n\t\t\t\t\t\t);\n\t\t\t\t\t\tregistrationsId = parseInt(index, 10);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn registrationsId;\n\t\t} catch (error) {\n\t\t\tthis.writeLog(\n\t\t\t\t`[Adapter v.${this.version} axios v.${axios.VERSION} requestRegistrationsId] ${error.message} Stack: ${error.stack}`,\n\t\t\t\t'error',\n\t\t\t);\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tprivate async deleteRegistrations(obj: ioBroker.Message): Promise<any> {\n\t\ttry {\n\t\t\tconst device = obj.message as { ip: string; name: string; token: string; id: number };\n\t\t\tif (device.id == 0 || device.id == undefined || device.id == null) {\n\t\t\t\tconst id = await this.requestRegistrationsId(obj);\n\t\t\t\tif (id != null) {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t`[Adapter v.${this.version} axios v.${axios.VERSION} deleteRegistrations] deleteRegistrations new id`,\n\t\t\t\t\t\tid,\n\t\t\t\t\t);\n\t\t\t\t\tdevice.id = id;\n\t\t\t\t} else {\n\t\t\t\t\tthis.writeLog(\n\t\t\t\t\t\t`[Adapter v.${this.version} axios v.${axios.VERSION} deleteRegistrations] no id found`,\n\t\t\t\t\t\t`error`,\n\t\t\t\t\t);\n\t\t\t\t\tconst response = {\n\t\t\t\t\t\tcode: 500,\n\t\t\t\t\t\tmessage: 'no id found',\n\t\t\t\t\t};\n\t\t\t\t\tif (obj.callback) this.sendTo(obj.from, obj.command, response, obj.callback);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!device.id) {\n\t\t\t\tthis.writeLog(\n\t\t\t\t\t`[Adapter v.${this.version} axios v.${axios.VERSION} deleteRegistrations] no id found`,\n\t\t\t\t\t`error`,\n\t\t\t\t);\n\t\t\t\tconst response = {\n\t\t\t\t\tcode: 500,\n\t\t\t\t\tmessage: 'no id found',\n\t\t\t\t};\n\t\t\t\tif (obj.callback) this.sendTo(obj.from, obj.command, response, obj.callback);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.writeLog(\n\t\t\t\t`[Adapter v.${this.version} axios v.${axios.VERSION} deleteRegistrations] delete registrations for ${device.name}`,\n\t\t\t\t'info',\n\t\t\t);\n\t\t\tconst deleteUrl = `https://${device.ip}/api/v1/registrations/${device.id}`;\n\t\t\tconst deleteConfig = {\n\t\t\t\tmethod: 'delete',\n\t\t\t\turl: deleteUrl,\n\t\t\t\theaders: {\n\t\t\t\t\tAuthorization: `Bearer ${this.decrypt(device.token)}`,\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t},\n\t\t\t\thttpsAgent: new https.Agent({ rejectUnauthorized: false }),\n\t\t\t};\n\t\t\tconst deleteResponse = await axios(deleteConfig);\n\t\t\tif (deleteResponse.status === 200) {\n\t\t\t\tthis.writeLog(\n\t\t\t\t\t`[Adapter v.${this.version} axios v.${axios.VERSION} deleteRegistrations] registration for ${device.name} was deleted`,\n\t\t\t\t\t'info',\n\t\t\t\t);\n\t\t\t\tif (obj.command === 'deleteObjectsAndLogOut') {\n\t\t\t\t\tconst status = { delete: true, logOut: true };\n\t\t\t\t\tif (obj.callback) this.sendTo(obj.from, obj.command, status, obj.callback);\n\t\t\t\t} else {\n\t\t\t\t\tconst status = { delete: false, logOut: true };\n\t\t\t\t\tif (obj.callback) this.sendTo(obj.from, obj.command, status, obj.callback);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.writeLog(\n\t\t\t\t\t`[Adapter v.${this.version} axios v.${axios.VERSION} deleteRegistrations] delete registration for ${device.name} failed with status ${deleteResponse.status}`,\n\t\t\t\t\t'error',\n\t\t\t\t);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis.writeLog(\n\t\t\t\t`[Adapter v.${this.version} axios v.${axios.VERSION} deleteRegistrations] ${error.message} Stack: ${error.stack}`,\n\t\t\t\t'error',\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate async deleteObjects(obj: ioBroker.Message): Promise<any> {\n\t\tconst device = obj.message as { ip: string; name: string; token: string; id: number };\n\t\tif (device.id == 0 || device.id == undefined || device.id == null) {\n\t\t\tconst id = await this.requestRegistrationsId(obj);\n\t\t\tif (id != null) {\n\t\t\t\tdevice.id = id;\n\t\t\t} else {\n\t\t\t\tthis.writeLog(`[Adapter v.${this.version} deleteObjects] no id found`, `error`);\n\t\t\t\tconst response = {\n\t\t\t\t\tcode: 500,\n\t\t\t\t\tmessage: 'no id found',\n\t\t\t\t};\n\t\t\t\tif (obj.callback) this.sendTo(obj.from, obj.command, response, obj.callback);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (!device.id) {\n\t\t\tthis.writeLog(`[Adapter v.${this.version} deleteObjects] no id found`, `error`);\n\t\t\tconst response = {\n\t\t\t\tcode: 500,\n\t\t\t\tmessage: 'no id found',\n\t\t\t};\n\t\t\tif (obj.callback) this.sendTo(obj.from, obj.command, response, obj.callback);\n\t\t\treturn;\n\t\t}\n\t\tthis.writeLog(`[Adapter v.${this.version} deleteObjects] delete objects for ${device.name}`, 'info');\n\t\tconst objects = await this.getAdapterObjectsAsync();\n\t\tconst deviceObjects: ioBroker.AdapterScopedObject[] = [];\n\t\tif (objects) {\n\t\t\tthis.writeLog(`[Adapter v.${this.version} deleteObjects] search for all device objects`, 'debug');\n\t\t\tObject.keys(objects).filter((key) => {\n\t\t\t\tif (objects[key].type === 'device') {\n\t\t\t\t\tdeviceObjects.push(objects[key]);\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (deviceObjects.length > 0) {\n\t\t\t\tconst deviceObject = deviceObjects.find((obj) => {\n\t\t\t\t\tthis.writeLog(\n\t\t\t\t\t\t`[Adapter v.${this.version} deleteObjects] check if the native id ${device.id} is present`,\n\t\t\t\t\t\t'info',\n\t\t\t\t\t);\n\t\t\t\t\tif ((obj.native && obj.native.id === 'no id') || !obj.native.id) {\n\t\t\t\t\t\tthis.writeLog(`[Adapter v.${this.version} deleteObjects] no id in native available`, 'info');\n\t\t\t\t\t\tthis.writeLog(\n\t\t\t\t\t\t\t`[Adapter v.${this.version} deleteObjects] search for the names ${device.name}`,\n\t\t\t\t\t\t\t'info',\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (obj.common.name === device.name) {\n\t\t\t\t\t\t\tthis.writeLog(`[Adapter v.${this.version} deleteObjects] Name found`, 'info');\n\t\t\t\t\t\t\treturn obj;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (obj.native && obj.native.id === device.id) {\n\t\t\t\t\t\tthis.writeLog(`[Adapter v.${this.version} deleteObjects] id found`, 'info');\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tif (deviceObject) {\n\t\t\t\t\t// // delete the device object\n\t\t\t\t\tawait this.delObjectAsync(deviceObject._id, { recursive: true });\n\t\t\t\t\tthis.writeLog(\n\t\t\t\t\t\t`[Adapter v.${this.version} deleteObjects] device object for ${device.name} was deleted`,\n\t\t\t\t\t\t'info',\n\t\t\t\t\t);\n\t\t\t\t\tif (obj.command === 'deleteObjectsAndLogOut') {\n\t\t\t\t\t\tthis.writeLog(\n\t\t\t\t\t\t\t`[Adapter v.${this.version} deleteObjects] delete registration for ${device.name}`,\n\t\t\t\t\t\t\t'info',\n\t\t\t\t\t\t);\n\t\t\t\t\t\tawait this.deleteRegistrations(obj);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.writeLog(\n\t\t\t\t\t\t\t`[Adapter v.${this.version} deleteObjects] delete objects for ${device.name} was finished send status to the Frontend`,\n\t\t\t\t\t\t\t'info',\n\t\t\t\t\t\t);\n\t\t\t\t\t\tconst status = { delete: true, logOut: false };\n\t\t\t\t\t\tif (obj.callback) this.sendTo(obj.from, obj.command, status, obj.callback);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// If you need to accept messages in your adapter, uncomment the following block and the corresponding line in the constructor.\n\t// /**\n\t//  * Some message was sent to this instance over message box. Used by email, pushover, text2speech, ...\n\t//  * Using this method requires \"common.messagebox\" property to be set to true in io-package.json\n\t//  */\n\tprivate async onMessage(obj: ioBroker.Message): Promise<void> {\n\t\tif (typeof obj === 'object' && obj.message) {\n\t\t\tif (obj.command === 'registrations') {\n\t\t\t\tif (this.requestCounter === 0) {\n\t\t\t\t\tthis.requestCounter = 0;\n\t\t\t\t\tawait this.registration(obj);\n\t\t\t\t} else {\n\t\t\t\t\tif (this.registrationTimer) this.clearTimeout(this.registrationTimer);\n\t\t\t\t\tthis.requestCounter = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (obj.command === 'deleteObjects') {\n\t\t\t\tawait this.deleteObjects(obj);\n\t\t\t}\n\t\t\tif (obj.command === 'logOut') {\n\t\t\t\tawait this.deleteRegistrations(obj);\n\t\t\t}\n\t\t\tif (obj.command === 'deleteObjectsAndLogOut') {\n\t\t\t\tawait this.deleteObjects(obj);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Is called if a subscribed state changes\n\t */\n\tprivate async onStateChange(id: string, state: ioBroker.State | null | undefined): Promise<void> {\n\t\tif (state) {\n\t\t\tif (state.from === 'system.adapter.' + this.namespace) {\n\t\t\t\t// ignore the state change from the adapter itself\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tthis.writeLog(\n\t\t\t\t\t`[Adapter v.${this.version} onStateChange] state ${id} changed: ${state.val} (ack = ${state.ack})`,\n\t\t\t\t\t'debug',\n\t\t\t\t);\n\t\t\t\tif (state.ack) return; // ignore the state change from the adapter itself\n\t\t\t\t// remove the adapter name from the id\n\t\t\t\tconst idWithoutAdapterName = id.replace(this.namespace + '.', '');\n\t\t\t\t// check if the state is in subscribedStates\n\t\t\t\tif (this.subscribedStates.includes(idWithoutAdapterName)) {\n\t\t\t\t\t// send the command to the box\n\t\t\t\t\tawait this.sendCommand(idWithoutAdapterName, state);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\t}\n\n\t/**\n\t * Is called when adapter shuts down - callback has to be called under any circumstances!\n\t */\n\tprivate async onUnload(callback: () => void): Promise<void> {\n\t\ttry {\n\t\t\t// Here you must clear all timeouts or intervals that may still be active\n\t\t\tif (this.requestTimer) this.clearTimeout(this.requestTimer);\n\t\t\tif (this.registrationTimer) this.clearTimeout(this.registrationTimer);\n\t\t\tif (this.messageHandlerTimer) this.clearTimeout(this.messageHandlerTimer);\n\t\t\tthis.setState('info.connection', false, true);\n\t\t\tfor (const devicesKey in this.config.devices) {\n\t\t\t\tthis.setState(\n\t\t\t\t\t`box_${await replaceFunktion(this.config.devices[devicesKey].name)}.reachable`,\n\t\t\t\t\tfalse,\n\t\t\t\t\ttrue,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tcallback();\n\t\t} catch (e) {\n\t\t\tcallback();\n\t\t}\n\t}\n}\n\nif (require.main !== module) {\n\t// Export the constructor in compact mode\n\tmodule.exports = (options: Partial<utils.AdapterOptions> | undefined) => new HueSyncBox(options);\n} else {\n\t// otherwise start the instance directly\n\t(() => new HueSyncBox())();\n}\n"],
  "mappings": "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",
  "names": ["axios", "key", "obj"]
}
