{
  "version": 3,
  "sources": ["../src/main.ts"],
  "sourcesContent": ["/*\n * Created with @iobroker/create-adapter v2.0.1\n */\n// TODO: API https://developers.meethue.com/develop/hue-entertainment/hue-hdmi-sync-box-api/#Device%20Discovery\n// The adapter-core module gives you access to the core ioBroker functions\n// you need to create an adapter\nimport * as utils from '@iobroker/adapter-core';\nimport {\n\tbehaviorChannelObj,\n\tbehaviorInputObj,\n\tbehaviorObj,\n\tcapabilitiesObj,\n\tdeviceChannelObj,\n\tdeviceStateObj,\n\texecutionChannelObj,\n\texecutionObj,\n\tgroupsObj,\n\thdmiChannelObj,\n\thdmiInputObj,\n\thdmiObj,\n\thueChannelObj,\n\thueObj,\n\tmusicObj,\n\tnetworkObj,\n\tupdateObj,\n\tvideo_gameObj,\n} from './lib/object_definition';\nimport * as https from 'https';\nimport axios from 'axios';\n// Load your modules here, e.g.:\nimport { replaceFunktion } from './lib/replaceFunktion';\nimport { ApiResult } from './interface/ApiResult';\n\n// Global variables here\n\nclass HueSyncBox extends utils.Adapter {\n\tprivate timer: NodeJS.Timeout | null;\n\tpublic constructor(options: Partial<utils.AdapterOptions> = {}) {\n\t\tsuper({\n\t\t\t...options,\n\t\t\tname: 'hue-sync-box',\n\t\t});\n\t\tthis.on('ready', this.onReady.bind(this));\n\t\tthis.on('stateChange', this.onStateChange.bind(this));\n\t\t// this.on('objectChange', this.onObjectChange.bind(this));\n\t\t// this.on('message', this.onMessage.bind(this));\n\t\tthis.on('unload', this.onUnload.bind(this));\n\t\tthis.timer = null;\n\t}\n\n\t/**\n\t * Is called when databases are connected and adapter received configuration.\n\t */\n\tprivate async onReady(): Promise<void> {\n\t\t// Initialize your adapter here\n\t\t// Reset the connection indicator during startup\n\t\tthis.setState('info.connection', false, true);\n\t\t// await this.createStates();\n\t\t// for (const devicesKey in this.config.devices) {\n\t\t// \tif (Object.prototype.hasOwnProperty.call(this.config.devices, devicesKey)) {\n\t\t// \t\tconst device = this.config.devices[devicesKey];\n\t\t// \t\tawait this.createStates(device);\n\t\t// \t}\n\t\t// }\n\t\tawait this.request();\n\t}\n\t//\n\tprivate async request(): Promise<void> {\n\t\ttry {\n\t\t\tfor (const devicesKey in this.config.devices) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(this.config.devices, devicesKey)) {\n\t\t\t\t\tconst device = this.config.devices[devicesKey];\n\t\t\t\t\tconst result = (await this.apiCall(`http://${device.ip}/api/v1`, device.token, 'GET')) as ApiResult;\n\t\t\t\t\tif (result) {\n\t\t\t\t\t\tawait this.createStates(device, result);\n\t\t\t\t\t\tawait this.writeState(result, Number(devicesKey));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// timer for request of 15 seconds\n\t\t\tif (this.timer) clearTimeout(this.timer);\n\t\t\tthis.timer = setTimeout(async () => {\n\t\t\t\tawait this.request();\n\t\t\t}, 15000);\n\t\t} catch (error) {\n\t\t\tthis.writeLog(\n\t\t\t\t`request error: ${error} , stack: ${error.stack}`,\n\t\t\t\t'error',\n\t\t\t\ttrue,\n\t\t\t\t`request error: ${error} , stack: ${error.stack}`,\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate async writeState(result: ApiResult, key: number): Promise<void> {\n\t\ttry {\n\t\t\tfor (const [resultKey, resultValue] of Object.entries(result)) {\n\t\t\t\tif (typeof resultValue === 'object') {\n\t\t\t\t\tfor (const [valueKey, value] of Object.entries(resultValue)) {\n\t\t\t\t\t\tif (typeof value !== 'object') {\n\t\t\t\t\t\t\tif (resultKey !== 'ir' && resultKey !== 'registrations' && resultKey !== 'presets') {\n\t\t\t\t\t\t\t\tawait this.setStateAsync(\n\t\t\t\t\t\t\t\t\t`box_${await replaceFunktion(\n\t\t\t\t\t\t\t\t\t\tthis.config.devices[key].room,\n\t\t\t\t\t\t\t\t\t)}.${resultKey}.${valueKey}`,\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tval: value as any,\n\t\t\t\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (resultKey !== 'ir' && resultKey !== 'registrations' && resultKey !== 'presets') {\n\t\t\t\t\t\t\t\tfor (const value1Key in value) {\n\t\t\t\t\t\t\t\t\tconst valueObjKey = value1Key as keyof typeof value;\n\n\t\t\t\t\t\t\t\t\tif (Object.prototype.hasOwnProperty.call(value, valueObjKey)) {\n\t\t\t\t\t\t\t\t\t\tif (resultKey === 'hue') {\n\t\t\t\t\t\t\t\t\t\t\tfor (const [hueGroupKey, hueGroupValue] of Object.entries(\n\t\t\t\t\t\t\t\t\t\t\t\tvalue[valueObjKey],\n\t\t\t\t\t\t\t\t\t\t\t)) {\n\t\t\t\t\t\t\t\t\t\t\t\tawait this.setStateAsync(\n\t\t\t\t\t\t\t\t\t\t\t\t\t`box_${await replaceFunktion(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.config.devices[key].room,\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}.${resultKey}.${valueKey}.${valueObjKey}.${hueGroupKey}`,\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tval: hueGroupValue as any,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tawait this.setStateAsync(\n\t\t\t\t\t\t\t\t\t\t\t\t`box_${await replaceFunktion(\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.config.devices[key].room,\n\t\t\t\t\t\t\t\t\t\t\t\t)}.${resultKey}.${valueKey}.${valueObjKey}`,\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tval: value[valueObjKey] as any,\n\t\t\t\t\t\t\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis.writeLog(\n\t\t\t\t`writeState error: ${error} , stack: ${error.stack}`,\n\t\t\t\t'error',\n\t\t\t\ttrue,\n\t\t\t\t`writeState error: ${error} , stack: ${error.stack}`,\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate async apiCall(url: string, token: string, method: string, data?: any): Promise<any> {\n\t\ttry {\n\t\t\t// create config for axios\n\t\t\tconst config = {\n\t\t\t\tmethod: method,\n\t\t\t\turl: url,\n\t\t\t\theaders: {\n\t\t\t\t\tAuthorization: `Bearer ${token}`,\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t},\n\t\t\t\thttpsAgent: new https.Agent({ rejectUnauthorized: false }),\n\t\t\t\tdata: data,\n\t\t\t};\n\n\t\t\t// send request\n\t\t\tconst response = await axios(config);\n\t\t\tthis.writeLog(`response: ${JSON.stringify(response.data)}`, 'debug', false, response.data);\n\t\t\treturn response.data;\n\t\t} catch (error) {\n\t\t\tif (error.response) {\n\t\t\t\tif (error.response.status === 401) {\n\t\t\t\t\tthis.writeLog(\n\t\t\t\t\t\t`error: ${error.response.status} ${error.response.message} - Authentication failed`,\n\t\t\t\t\t\t'error',\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t`error: ${error.response.status} ${error.response.message} - Authentication failed`,\n\t\t\t\t\t);\n\t\t\t\t\treturn;\n\t\t\t\t} else if (error.response.status === 404) {\n\t\t\t\t\tthis.writeLog(\n\t\t\t\t\t\t`error: ${error.response.status} ${error.response.message} - Invalid URL Path`,\n\t\t\t\t\t\t'error',\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t`error: ${error.response.status} ${error.response.message} - Invalid URL Path`,\n\t\t\t\t\t);\n\t\t\t\t\treturn;\n\t\t\t\t} else if (error.response.status === 500) {\n\t\t\t\t\tthis.writeLog(\n\t\t\t\t\t\t`error: ${error.response.status} ${error.response.message} - internal server error`,\n\t\t\t\t\t\t'error',\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t`error: ${error.response.status} ${error.response.message} - internal server error`,\n\t\t\t\t\t);\n\t\t\t\t\treturn;\n\t\t\t\t} else {\n\t\t\t\t\tthis.writeLog(`error: ${error}`, 'error', true, `error: ${error}`);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.writeLog(\n\t\t\t\t\t`error Type ${error.name} error: ${error.code} Message: ${error.message}`,\n\t\t\t\t\t'error',\n\t\t\t\t\ttrue,\n\t\t\t\t\terror,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async createStates(device: ioBroker.Devices | undefined, result: ApiResult): Promise<void> {\n\t\ttry {\n\t\t\tthis.writeLog(`initializing Object creation`, 'debug', false);\n\t\t\t// const devices = this.config.devices;\n\t\t\t// create the states for the devices\n\t\t\tif (!device) return this.writeLog(`No devices configured`, 'warn', false);\n\n\t\t\t// get the current space and replace all special characters, so it can be used as id\n\t\t\tconst room = await replaceFunktion(device.room);\n\n\t\t\t// create the device\n\t\t\tthis.writeLog(`creating device with Name  bax_${await replaceFunktion(room)}`, 'debug', false);\n\t\t\tawait this.setObjectNotExistsAsync(`box_${await replaceFunktion(room)}`, {\n\t\t\t\ttype: 'device',\n\t\t\t\tcommon: {\n\t\t\t\t\tname: room,\n\t\t\t\t},\n\t\t\t\tnative: {},\n\t\t\t});\n\n\t\t\tthis.writeLog(`creating channel and states for device`, 'debug', false);\n\t\t\t// create the channels and states for the device\n\t\t\tawait this.setObjectNotExistsAsync(`box_${await replaceFunktion(room)}.device`, {\n\t\t\t\ttype: 'channel',\n\t\t\t\tcommon: {\n\t\t\t\t\tname: 'device',\n\t\t\t\t},\n\t\t\t\tnative: {},\n\t\t\t});\n\n\t\t\tfor (const key in deviceChannelObj) {\n\t\t\t\tif (deviceChannelObj.hasOwnProperty(key)) {\n\t\t\t\t\tawait this.setObjectNotExistsAsync(`box_${room}.device.${key}`, deviceChannelObj[key]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (const key in deviceStateObj) {\n\t\t\t\tif (deviceStateObj.hasOwnProperty(key)) {\n\t\t\t\t\tawait this.setObjectNotExistsAsync(`box_${room}.device.${key}`, deviceStateObj[key]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (const key in networkObj) {\n\t\t\t\tif (networkObj.hasOwnProperty(key)) {\n\t\t\t\t\tawait this.setObjectNotExistsAsync(`box_${room}.device.wifi.${key}`, networkObj[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (const key in updateObj) {\n\t\t\t\tif (updateObj.hasOwnProperty(key)) {\n\t\t\t\t\tawait this.setObjectNotExistsAsync(`box_${room}.device.update.${key}`, updateObj[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (const key in capabilitiesObj) {\n\t\t\t\tif (capabilitiesObj.hasOwnProperty(key)) {\n\t\t\t\t\tawait this.setObjectNotExistsAsync(`box_${room}.device.capabilities.${key}`, capabilitiesObj[key]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.writeLog(`creating channel and states for hue`, 'debug', false);\n\t\t\tawait this.setObjectNotExistsAsync(`box_${room}.hue`, {\n\t\t\t\ttype: 'channel',\n\t\t\t\tcommon: {\n\t\t\t\t\tname: 'hue',\n\t\t\t\t},\n\t\t\t\tnative: {},\n\t\t\t});\n\n\t\t\tfor (const key in hueChannelObj) {\n\t\t\t\tif (hueChannelObj.hasOwnProperty(key)) {\n\t\t\t\t\tawait this.setObjectNotExistsAsync(`box_${room}.hue.${key}`, hueChannelObj[key]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (const key in hueObj) {\n\t\t\t\tif (hueObj.hasOwnProperty(key)) {\n\t\t\t\t\tawait this.setObjectNotExistsAsync(`box_${room}.hue.${key}`, hueObj[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (const groupKey in result.hue.groups) {\n\t\t\t\tfor (const key in groupsObj) {\n\t\t\t\t\tif (groupsObj.hasOwnProperty(key)) {\n\t\t\t\t\t\tawait this.setObjectNotExistsAsync(`box_${room}.hue.groups.${groupKey}.${key}`, groupsObj[key]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.writeLog(`creating channel and states for execution`, 'debug', false);\n\t\t\tawait this.setObjectNotExistsAsync(`box_${room}.execution`, {\n\t\t\t\ttype: 'channel',\n\t\t\t\tcommon: {\n\t\t\t\t\tname: 'execution',\n\t\t\t\t},\n\t\t\t\tnative: {},\n\t\t\t});\n\n\t\t\tfor (const key in executionChannelObj) {\n\t\t\t\tif (executionChannelObj.hasOwnProperty(key)) {\n\t\t\t\t\tawait this.setObjectNotExistsAsync(`box_${room}.execution.${key}`, executionChannelObj[key]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (const key in executionObj) {\n\t\t\t\tif (executionObj.hasOwnProperty(key)) {\n\t\t\t\t\tawait this.setObjectNotExistsAsync(`box_${room}.execution.${key}`, executionObj[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst array = ['game', 'music', 'video'];\n\t\t\tfor (const arrayKey in array) {\n\t\t\t\tif (array.hasOwnProperty(arrayKey)) {\n\t\t\t\t\tif (array[arrayKey] !== 'music') {\n\t\t\t\t\t\tfor (const key in video_gameObj) {\n\t\t\t\t\t\t\tif (video_gameObj.hasOwnProperty(key)) {\n\t\t\t\t\t\t\t\tawait this.setObjectNotExistsAsync(\n\t\t\t\t\t\t\t\t\t`box_${room}.execution.${array[arrayKey]}.${key}`,\n\t\t\t\t\t\t\t\t\tvideo_gameObj[key],\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfor (const key in musicObj) {\n\t\t\t\t\t\t\tif (musicObj.hasOwnProperty(key)) {\n\t\t\t\t\t\t\t\tawait this.setObjectNotExistsAsync(\n\t\t\t\t\t\t\t\t\t`box_${room}.execution.${array[arrayKey]}.${key}`,\n\t\t\t\t\t\t\t\t\tmusicObj[key],\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.writeLog(`creating channel and states for hdmi`, 'debug', false);\n\t\t\tawait this.setObjectNotExistsAsync(`box_${room}.hdmi`, {\n\t\t\t\ttype: 'channel',\n\t\t\t\tcommon: {\n\t\t\t\t\tname: 'hdmi',\n\t\t\t\t},\n\t\t\t\tnative: {},\n\t\t\t});\n\n\t\t\tfor (const key in hdmiChannelObj) {\n\t\t\t\tif (hdmiChannelObj.hasOwnProperty(key)) {\n\t\t\t\t\tawait this.setObjectNotExistsAsync(`box_${room}.hdmi.${key}`, hdmiChannelObj[key]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (const key in hdmiObj) {\n\t\t\t\tif (hdmiObj.hasOwnProperty(key)) {\n\t\t\t\t\tawait this.setObjectNotExistsAsync(`box_${room}.hdmi.${key}`, hdmiObj[key]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (const key in hdmiInputObj) {\n\t\t\t\tif (hdmiInputObj.hasOwnProperty(key)) {\n\t\t\t\t\tfor (let i = 1; i < 5; i++) {\n\t\t\t\t\t\tawait this.setObjectNotExistsAsync(`box_${room}.hdmi.input${i}.${key}`, hdmiInputObj[key]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tawait this.setObjectNotExistsAsync(`box_${room}.hdmi.output.${key}`, hdmiInputObj[key]);\n\t\t\t}\n\n\t\t\tthis.writeLog(`creating channel and states for behavior`, 'debug', false);\n\t\t\tawait this.setObjectNotExistsAsync(`box_${room}.behavior`, {\n\t\t\t\ttype: 'channel',\n\t\t\t\tcommon: {\n\t\t\t\t\tname: 'behavior',\n\t\t\t\t},\n\t\t\t\tnative: {},\n\t\t\t});\n\n\t\t\tfor (const key in behaviorChannelObj) {\n\t\t\t\tif (behaviorChannelObj.hasOwnProperty(key)) {\n\t\t\t\t\tawait this.setObjectNotExistsAsync(`box_${room}.behavior.${key}`, behaviorChannelObj[key]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (const key in behaviorObj) {\n\t\t\t\tif (behaviorObj.hasOwnProperty(key)) {\n\t\t\t\t\tawait this.setObjectNotExistsAsync(`box_${room}.behavior.${key}`, behaviorObj[key]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (const key in behaviorInputObj) {\n\t\t\t\tif (behaviorInputObj.hasOwnProperty(key)) {\n\t\t\t\t\tfor (let i = 1; i < 5; i++) {\n\t\t\t\t\t\tawait this.setObjectNotExistsAsync(\n\t\t\t\t\t\t\t`box_${room}.behavior.input${i}.${key}`,\n\t\t\t\t\t\t\tbehaviorInputObj[key],\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.subscribeForeignStates('0_userdata.0.example_state');\n\n\t\t\tthis.writeLog(`all device / channel and states were created`, 'debug', false);\n\t\t} catch (error) {\n\t\t\tthis.writeLog(`[createObjects] ${error.message} Stack: ${error.stack}`, 'error', false);\n\t\t}\n\t}\n\n\t/**\n\t * Is called when adapter shuts down - callback has to be called under any circumstances!\n\t */\n\tprivate onUnload(callback: () => void): void {\n\t\ttry {\n\t\t\t// Here you must clear all timeouts or intervals that may still be active\n\t\t\tif (this.timer) clearTimeout(this.timer);\n\n\t\t\tcallback();\n\t\t} catch (e) {\n\t\t\tcallback();\n\t\t}\n\t}\n\n\t// If you need to react to object changes, uncomment the following block and the corresponding line in the constructor.\n\t// You also need to subscribe to the objects with `this.subscribeObjects`, similar to `this.subscribeStates`.\n\t// /**\n\t//  * Is called if a subscribed object changes\n\t//  */\n\t// private onObjectChange(id: string, obj: ioBroker.Object | null | undefined): void {\n\t// \tif (obj) {\n\t// \t\t// The object was changed\n\t// \t\tthis.log.info(`object ${id} changed: ${JSON.stringify(obj)}`);\n\t// \t} else {\n\t// \t\t// The object was deleted\n\t// \t\tthis.log.info(`object ${id} deleted`);\n\t// \t}\n\t// }\n\n\t/**\n\t * @description a function for log output\n\t */\n\tprivate writeLog(\n\t\tlogtext: string,\n\t\tlogtype: 'silly' | 'info' | 'debug' | 'warn' | 'error',\n\t\tconsoleLog: boolean,\n\t\tconsoleLogMessage?: string,\n\t): void {\n\t\ttry {\n\t\t\tif (logtype === 'silly') this.log.silly(logtext);\n\t\t\tif (logtype === 'info') this.log.info(logtext);\n\t\t\tif (logtype === 'debug') this.log.debug(logtext);\n\t\t\tif (logtype === 'warn') this.log.warn(logtext);\n\t\t\tif (logtype === 'error') this.log.error(logtext);\n\t\t\tif (consoleLog) console.log(consoleLogMessage);\n\t\t} catch (error) {\n\t\t\tthis.log.error(`writeLog error: ${error} , stack: ${error.stack}`);\n\t\t}\n\t}\n\n\t/**\n\t * Is called if a subscribed state changes\n\t */\n\tprivate async onStateChange(id: string, state: ioBroker.State | null | undefined): Promise<void> {\n\t\tif (state) {\n\t\t\tconsole.log('state: ', state.val);\n\t\t\t// The state was changed\n\t\t\tthis.log.info(`state ${id} changed: ${state.val} (ack = ${state.ack})`);\n\t\t\tif (id === '0_userdata.0.example_state') {\n\t\t\t\t// await this.request('http://localhost:3000/api/v1');\n\t\t\t\tconsole.log('testVariable changed');\n\t\t\t\tfor (const devicesKey in this.config.devices) {\n\t\t\t\t\tif (Object.prototype.hasOwnProperty.call(this.config.devices, devicesKey)) {\n\t\t\t\t\t\tconst device = this.config.devices[devicesKey];\n\t\t\t\t\t\tawait this.apiCall(`http://${device.ip}/api/v1`, device.token, 'GET');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t// The state was deleted\n\t\t\tthis.log.info(`state ${id} deleted`);\n\t\t}\n\t}\n\n\t// If you need to accept messages in your adapter, uncomment the following block and the corresponding line in the constructor.\n\t// /**\n\t//  * Some message was sent to this instance over message box. Used by email, pushover, text2speech, ...\n\t//  * Using this method requires \"common.messagebox\" property to be set to true in io-package.json\n\t//  */\n\t// private onMessage(obj: ioBroker.Message): void {\n\t// \tif (typeof obj === 'object' && obj.message) {\n\t// \t\tif (obj.command === 'send') {\n\t// \t\t\t// e.g. send email or pushover or whatever\n\t// \t\t\tthis.log.info('send command');\n\n\t// \t\t\t// Send response in callback if required\n\t// \t\t\tif (obj.callback) this.sendTo(obj.from, obj.command, 'Message received', obj.callback);\n\t// \t\t}\n\t// \t}\n\t// }\n}\n\nif (require.main !== module) {\n\t// Export the constructor in compact mode\n\tmodule.exports = (options: Partial<utils.AdapterOptions> | undefined) => new HueSyncBox(options);\n} else {\n\t// otherwise start the instance directly\n\t(() => new HueSyncBox())();\n}\n"],
  "mappings": "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",
  "names": ["axios"]
}
